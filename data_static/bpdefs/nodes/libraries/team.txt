LIB team
{
	FUNC AddScore, SHARED
	{
		DESC Increases the score of the given team
		IN index, PN_Number, #Index of the team
		IN increment, PN_Number, #Amount to increase the team's score by
	}
	FUNC BestAutoJoinTeam, SHARED
	{
		DESC Returns the team index of the team with the least players. Falls back to TEAM_UNASSIGNED
		OUT index, PN_Number, #Team index
	}
	PURE GetAllTeams, SHARED
	{
		DESC Returns a table consisting of information on every defined team
		OUT teams, PN_Struct, PNF_Table, TeamInfo, #Team info
	}
	PURE GetClass, SHARED
	{
		TBD
		DESC Returns the selectable classes for the given team. This can be added to with team/SetClass
		IN index, PN_Number, #Index of the team
		OUT out_0, PN_Any, PNF_Table, #Selectable classes
	}
	PURE GetColor, SHARED
	{
		DESC Returns the team's color.
		IN teamIndex, PN_Number, #The team index.
		OUT color, PN_Color, PNF_None, #The team's color as a Color structure.
	}
	PURE GetName, SHARED
	{
		DESC Returns the name of the team.
		IN teamIndex, PN_Number, #The team index.
		OUT name, PN_String, #The team name. If the team is not defined, returns an empty string.
	}
	PURE GetPlayers, SHARED
	{
		DESC Returns a table with all player of the specified team.
		IN teamIndex, PN_Number, #The team index.
		OUT players, PN_Ref, PNF_Table, Player, #A table of Players that belong to the requested team.
	}
	PURE GetScore, SHARED
	{
		DESC Returns the score of the team.
		IN teamIndex, PN_Number, #The team index.
		OUT score, PN_Number, #score
	}
	PURE GetSpawnPoint, SHARED
	{
		DESC Returns a table of valid spawnpoint classes the team can use. These are set with team.SetSpawnPoint.
		IN index, PN_Number, #Index of the team
		OUT classes, PN_String, PNF_Table, #Valid spawnpoint classes
	}
	PURE GetSpawnPoints, SHARED
	{
		DESC Returns a table of valid spawnpoint entities the team can use. These are set with team.SetSpawnPoint.
		IN index, PN_Number, #Index of the team
		OUT points, PN_Ref, PNF_Table, Entity, #Valid spawnpoint entities
	}
	FUNC Joinable, SHARED
	{
		DESC Returns if a team is joinable or not. This is set in team.SetUp.
		IN index, PN_Number, #The index of the team.
		OUT joinable, PN_Bool, #True if the team is joinable. False otherwise.
	}
	FUNC NumPlayers, SHARED
	{
		DESC Returns the amount of players in a team.
		IN teamIndex, PN_Number, #The team index.
		OUT players, PN_Number, #playerCount
	}
	FUNC SetClass, SHARED
	{
		DESC Sets valid classes for use by a team. Classes can be created using player_manager.RegisterClass
		IN index, PN_Number, #Index of the team
		IN classes, PN_Number, PNF_Table, #A class ID or table of class IDs
	}
	FUNC SetColor, SHARED
	{
		DESC Sets the team's color.
		IN teamIndex, PN_Number, #The team index.
		IN color, PN_Color, PNF_None, #The team's new color as a Color structure.
	}
	FUNC SetScore, SHARED
	{
		DESC Sets the score of the given team
		IN index, PN_Number, #Index of the team
		IN score, PN_Number, #The team's new score
	}
	FUNC SetSpawnPoint, SHARED
	{
		DESC Sets valid spawnpoint classes for use by a team.
		IN index, PN_Number, #Index of the team
		IN classes, PN_String, PNF_Table, #A spawnpoint classname or table of spawnpoint classnames
	}
	FUNC SetUp, SHARED
	{
		DESC Creates a new team.
		IN teamIndex, PN_Number, #The team index.
		IN teamName, PN_String, #The team name.
		IN teamColor, PN_Color, PNF_None, #The team color. Uses the Color structure.
		IN isJoinable, PN_Bool, PNF_Nullable, #Whether the team is joinable or not.
	}
	FUNC TotalDeaths, SHARED
	{
		DESC Returns the sum of deaths of all players of the team.
		IN teamIndex, PN_Number, #The team index.
		OUT deaths, PN_Number, #deathCount
	}
	FUNC TotalFrags, SHARED
	{
		DESC Get's the total frags in a team.
		IN Entity, PN_Ref, PNF_None, Entity, #Entity or number.
		OUT frags, PN_Number, #index
	}
	FUNC Valid, SHARED
	{
		DESC Returns true if the given team index is valid
		IN index, PN_Number, #Index of the team
		OUT valid, PN_Bool, #Is valid
	}
}