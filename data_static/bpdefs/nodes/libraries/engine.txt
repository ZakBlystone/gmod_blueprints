LIB engine
{
	PURE ActiveGamemode, SHARED
	{
		DESC Returns the name of the currently running gamemode.
		OUT gamemode, PN_String, #The active gamemode's name. This is the name of the gamemode's folder.
	}
	PURE GetAddons, SHARED
	{
		DESC Returns a list of addons the player have subscribed to on the workshop.
		OUT addons, PN_Struct, PNF_Table, AddonInfo, #A table with 6 keys (downloaded, models, title, file, mounted, wsid)
	}
	PURE GetDemoPlaybackStartTick, CLIENT
	{
		DESC When starting playing a demo, engine.GetDemoPlaybackTick will be reset and its old value will be added to this functions return value.
		OUT tick, PN_Number
	}
	PURE GetDemoPlaybackTick, CLIENT
	{
		DESC Current tick of currently loaded demo.
		OUT tick, PN_Number, #The amount of ticks of currently loaded demo.
	}
	PURE GetDemoPlaybackTimeScale, CLIENT
	{
		DESC Returns time scale of demo playback.
		OUT timeScale, PN_Number, #The time scale of demo playback, value of demo_timescale console variable.
	}
	PURE GetDemoPlaybackTotalTicks, CLIENT
	{
		DESC Returns total amount of ticks of currently loaded demo.
		OUT ticks, PN_Number, #Total amount of ticks of currently loaded demo.
	}
	PURE GetGamemodes, SHARED
	{
		DESC Returns a table containing info for all installed gamemodes
		OUT gamemodes, PN_Struct, PNF_Table, GamemodeInfo, #gamemodes
	}
	PURE GetGames, SHARED
	{
		DESC Returns an array of tables corresponding to all games from which Garry's Mod supports mounting content.
		OUT games, PN_Struct, PNF_Table, GameInfo, #A table of tables containing all mountable games
	}
	PURE IsPlayingDemo, CLIENT
	{
		DESC Returns true if we're currently playing a demo.
		OUT playing, PN_Bool, #Whether the game is currently playing a demo or not.
	}
	PURE IsRecordingDemo, CLIENT
	{
		DESC Returns true if the game is currently recording a demo file (.dem) using gm_demo
		OUT recording, PN_Bool, #Whether the game is currently recording a demo or not.
	}
	FUNC LightStyle, SERVER
	{
		DESC This is a direct binding to the function “engine->LightStyle”. This function allows you to change the default light style of the map - so you can make lighting lighter or darker. You’ll need to call render.RedownloadAllLightmaps clientside to refresh the lightmaps to this new color.
		IN lightstyle, PN_Number, #The lightstyle to edit. 0 to 63. If you want to edit map lighting, you want to set this to 0.
		IN pattern, PN_String, #The pattern to change the lightstyle to. "a" is the darkest, "z" is the brightest. You can use stuff like "abcxyz" to make flashing patterns. The normal brightness for a map is "m". Values over "z" are allowed, "~" for instance.
	}
	FUNC OpenDupe, CLIENT
	{
		DESC Loads a duplication from the local filesystem.
		IN dupeName, PN_String, #Name of the file. e.g, engine.OpenDupe("dupes/8b809dd7a1a9a375e75be01cdc12e61f.dupe")
		OUT data, PN_String, #Compressed dupeData. Use util.JSONToTable to make it into a format useable by the duplicator tool.
	}
	PURE ServerFrameTime, CLIENT
	{
		DESC Returns an estimate of the server's performance. Equivalent to calling FrameTime from the server, according to source code.
		OUT frameTime, PN_Number, #Frame time
		OUT deviation, PN_Number, #Server Framerate Std Deviation
	}
	PURE TickCount, SHARED
	{
		DESC Returns the number of ticks since the game server started.
		OUT ticks, PN_Number, #Number of ticks since the game server started.
	}
	PURE TickInterval, SHARED
	{
		DESC Returns the number of seconds between each gametick.
		OUT ticks, PN_Number, #Number of seconds between each gametick.
	}
	PURE VideoSettings, CLIENT
	{
		DESC Returns video recording settings set by video.Record. Used by Demo-To-Video feature.
		OUT videoSettings, PN_Struct, PNF_None, VideoData, #The video recording settings, see VideoData structure.
	}
	FUNC WriteDupe, CLIENT
	{
		DESC Saves a duplication as a file.
		IN dupe, PN_String, #Dupe table, encoded by util.TableToJSON and compressed by util.Compress
		IN jpeg, PN_String, #The dupe icon, created by render.Capture
	}
	FUNC WriteSave, CLIENT
	{
		DESC Stores savedata into the game (can be loaded using the LoadGame menu)
		IN saveData, PN_String, #Data generated by gmsave.SaveMap
		IN name, PN_String, #Name the save will have.
		IN time, PN_Number, #When the save was saved during the game (Put CurTime here)
		IN map, PN_String, #The map the save is used for.
	}
}