LIB player
{
	FUNC CreateNextBot, SERVER
	{
		PROTECTED
		DESC Similar to the serverside command "bot", this function creates a new Player bot with the given name. This bot will not obey to the usual "bot_*" commands, and it's the same bot base used in TF2 and CS:S.
		IN botName, PN_String, #The name of the bot, using an already existing name will append brackets at the end of it with a number pertaining it.
		OUT player, PN_Ref, PNF_None, Player, #The newly created Player bot. Returns NULL if there's no Player slots available to host it.
	}
	PURE GetAll, SHARED
	{
		DESC Gets all the current players in the server (not including connecting clients).
		OUT players, PN_Ref, PNF_Table, Player, #All Players currently in the server.
	}
	PURE GetBots, SHARED
	{
		DESC Returns a table of all bots on the server.
		OUT bots, PN_Ref, PNF_Table, Player, #A table only containing bots ( AI / non human players )
	}
	PURE GetByAccountID, SHARED
	{
		DESC Gets the player with the specified AccountID.
		IN accountID, PN_String, #The Player:AccountID to find the player by.
		OUT player, PN_Ref, PNF_None, Player, #Player if one is found, false otherwise.
	}
	PURE GetByID, SHARED
	{
		DESC Gets the player with the specified connection ID.
		IN connectionID, PN_Number, #The connection ID to find the player by.
		OUT player, PN_Ref, PNF_None, Player, #Player if one is found, nil otherwise
	}
	PURE GetBySteamID, SHARED
	{
		DESC Gets the player with the specified SteamID.
		IN steamID, PN_String, #The Player:SteamID to find the player by.
		OUT player, PN_Ref, PNF_None, Player, #Player if one is found, false otherwise.
	}
	PURE GetBySteamID64, SHARED
	{
		DESC Gets the player with the specified SteamID64.
		IN steamID, PN_String, #The Player:SteamID64 to find the player by. Also accepts numbers.
		OUT player, PN_Ref, PNF_None, Player, #Player if one is found, false otherwise.
	}
	PURE GetByUniqueID, SHARED
	{
		DESC Gets the player with the specified uniqueID (not recommended way to identify players).
		IN uniqueID, PN_String, #The Player:UniqueID to find the player by.
		OUT player, PN_Ref, PNF_None, Player, #Player if one is found, false otherwise.		
	}
	PURE GetCount, SHARED
	{
		DESC Gives you the player count. Similar to #player.GetAll but with much better performance.
		OUT count, PN_Number, #Number of players
	}
	PURE GetHumans, SHARED
	{
		DESC Returns a table of all human ( non bot/AI ) players.
		OUT humans, PN_Ref, PNF_Table, Player, #A table of all human ( non bot/AI ) players.
	}
}