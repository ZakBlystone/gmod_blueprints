LIB bit
{
	PURE arshift, SHARED
	{
		DESC Returns the arithmetically shifted value.
		IN value, PN_Number, #The value to be manipulated.
		IN shiftCount, PN_Number, #Amounts of bits to shift.
		OUT result, PN_Number, #shiftedValue
	}
	PURE band, SHARED
	{
		DESC Performs the bitwise "and" for all values specified.
		IN value1, PN_Number, #The first value.
		IN value2, PN_Number, #The second value.
		OUT result, PN_Number, #Result of bitwise "and" operation.
	}
	PURE bnot, SHARED
	{
		DESC Returns the bitwise not of the value.
		IN value, PN_Number, #The value to be inverted.
		OUT result, PN_Number, #bitwiseNot
	}
	PURE bor, SHARED
	{
		DESC Returns the bitwise OR of all values specified.
		IN value1, PN_Number, #The first value.
		IN value2, PN_Number, #The second value.
		OUT result, PN_Number, #The bitwise OR result between all numbers.
	}
	PURE bswap, SHARED
	{
		DESC Swaps the byte order.
		IN value, PN_Number, #The value to be byte swapped.
		OUT result, PN_Number, #swapped
	}
	PURE bxor, SHARED
	{
		DESC Returns the bitwise xor of all values specified.
		IN value1, PN_Number, #The first value.
		IN value2, PN_Number, #The second value.
		OUT result, PN_Number, #bitwiseXOr
	}
	PURE lshift, SHARED
	{
		DESC Returns the left shifted value.
		IN value, PN_Number, #The value to be manipulated.
		IN shiftCount, PN_Number, #Amounts of bits to shift left by.
		OUT result, PN_Number, #shiftedValue
	}
	PURE rol, SHARED
	{
		DESC Returns the left rotated value.
		IN value, PN_Number, #The value to be manipulated.
		IN shiftCount, PN_Number, #Amounts of bits to rotate left by.
		OUT result, PN_Number, #shiftedValue
	}
	PURE ror, SHARED
	{
		DESC Returns the right rotated value.
		IN value, PN_Number, #The value to be manipulated.
		IN shiftCount, PN_Number, #Amounts of bits to rotate right by.
		OUT result, PN_Number, #shiftedValue
	}
	PURE rshift, SHARED
	{
		DESC Returns the right shifted value.
		IN value, PN_Number, #The value to be manipulated.
		IN shiftCount, PN_Number, #Amounts of bits to shift right by.
		OUT result, PN_Number, #shiftedValue
	}
	PURE tobit, SHARED
	{
		DESC Normalizes the specified value and clamps it in the range of a signed 32bit integer.
		IN value, PN_Number, #The value to be normalized.
		OUT result, PN_Number, #swapped
	}
	PURE tohex, SHARED
	{
		DESC Returns the hexadecimal representation of the number with the specified digits.
		IN value, PN_Number, #The value to be normalized.
		IN digits, PN_Number, PNF_Nullable, #The number of digits. Optional
		OUT result, PN_String, #hexString
	}
}