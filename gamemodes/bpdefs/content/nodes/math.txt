LIB MATH
{
	NOWIKIDOC
	PURE PI, SHARED
	{
		DISPLAY PI
		OUT Result, PN_Number
		CODE #1 = 3.1415926535898
		COMPACT
	}
	PURE Modulo, SHARED
	{
		DISPLAY %
		IN A, PN_Number
		IN B, PN_Number
		OUT Result, PN_Number
		CODE #1 = $1 % $2
		COMPACT
	}
	PURE DivideNumber, SHARED
	{
		DISPLAY /
		IN A, PN_Number
		IN B, PN_Number
		OUT Result, PN_Number
		CODE #1 = $1 / $2
		COMPACT
	}
	PURE MultiplyNumber, SHARED
	{
		DISPLAY *
		OUT Result, PN_Number
		CLASS VariadicOperator
		REDIRECTPIN A, In_1
		REDIRECTPIN B, In_2
		PARAM operator, *
		COMPACT
	}
	PURE AddNumber, SHARED
	{
		DISPLAY +
		OUT Result, PN_Number
		CLASS VariadicOperator
		REDIRECTPIN A, In_1
		REDIRECTPIN B, In_2
		PARAM operator, +
		COMPACT
	}
	PURE SubNumber, SHARED
	{
		DISPLAY -
		OUT Result, PN_Number
		CLASS VariadicOperator
		REDIRECTPIN A, In_1
		REDIRECTPIN B, In_2
		PARAM operator, -
		COMPACT
	}
	PURE AddAngle, SHARED
	{
		DISPLAY angle + angle
		OUT Result, PN_Angles
		CLASS VariadicOperator
		PARAM operator, +
		COMPACT
	}
	PURE SubAngle, SHARED
	{
		DISPLAY angle - angle
		OUT Result, PN_Angles
		CLASS VariadicOperator
		PARAM operator, -
		COMPACT
	}
	PURE AngleMulScalar, SHARED
	{
		DISPLAY angle * number
		IN Angle, PN_Angles
		IN Scalar, PN_Number
		OUT Result, PN_Angles
		CODE #1 = $1 * $2
		COMPACT true
	}
	PURE AddVector, SHARED
	{
		DISPLAY vector + vector
		OUT Result, PN_Vector
		CLASS VariadicOperator
		REDIRECTPIN A, In_1
		REDIRECTPIN B, In_2
		PARAM operator, +
		COMPACT
	}
	PURE MulVector, SHARED
	{
		DISPLAY vector * vector
		OUT Result, PN_Vector
		CLASS VariadicOperator
		REDIRECTPIN A, In_1
		REDIRECTPIN B, In_2
		PARAM operator, *
		COMPACT
	}
	PURE SubVector, SHARED
	{
		DISPLAY vector - vector
		OUT Result, PN_Vector
		CLASS VariadicOperator
		REDIRECTPIN A, In_1
		REDIRECTPIN B, In_2
		PARAM operator, -
		COMPACT
	}
	PURE VectorMA, SHARED
	{
		IN Base, PN_Vector
		IN Dir, PN_Vector
		IN Scalar, PN_Number
		OUT Result, PN_Vector
		CODE #1 = $1 + ($2 * $3)
		COMPACT false
	}
	PURE ScaleVector, SHARED
	{
		DISPLAY vector * number
		IN Vector, PN_Vector
		IN Scalar, PN_Number
		OUT Result, PN_Vector
		CODE #1 = $1 * $2
		COMPACT
	}
	PURE VectorMatrixMul, SHARED
	{
		DISPLAY vector * matrix
		IN Vector, PN_Vector
		IN Matrix, PN_Ref, PNF_None, VMatrix
		OUT Vector, PN_Vector
		CODE #1 = $1 * $2
		COMPACT
	}
	PURE MatrixMatrixMul, SHARED
	{
		DISPLAY matrix * matrix
		IN Matrix, PN_Ref, PNF_None, VMatrix
		IN Matrix, PN_Ref, PNF_None, VMatrix
		OUT Matrix, PN_Ref, PNF_None, VMatrix
		CODE #1 = $1 * $2
		COMPACT
	}
	FUNC MatrixFromAngles, SHARED
	{
		DISPLAY angles -> matrix
		IN Angles, PN_Angles
		OUT Matrix, PN_Ref, PNF_None, VMatrix
		CODE #1 = Matrix() #1:SetAngles($1)
		COMPACT
	}
}